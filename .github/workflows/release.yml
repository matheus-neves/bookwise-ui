name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Set up npm auth
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}"
          echo "@matheus-neves:registry=https://npm.pkg.github.com/"
          cat .npmrc

      - name: Verify npm registry URL
        run: npm config get registry

      - name: Install Dependencies
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Publish Docs to Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
          workingDir: ./apps/docs


      # - name: Deploy storybook
      #   working-directory: ./apps/docs
      #   run: npm run deploy-storybook -- --ci --existing-output-dir=storybook-static
      #   env:
      #     GH_TOKEN: ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}


      # - name: Create Release Pull Request or Publish to npm
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     # This expects you to have a script called release which does a build for your packages and calls changeset publish
      #     publish: yarn release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Send a Slack notification if a publish happens
      #   if: steps.changesets.outputs.published == 'true'
      #   # You can do something when a publish happens.
      #   run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
